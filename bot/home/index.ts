import { Composer, Scenes } from "telegraf";
import { MyContext } from "../model/Context";
import { getstart } from "../controller";
require("dotenv").config();

const scenes = {
    fields: ["study", "vocabular", "translater", "dashboard", "home", "blitz"]
}

const extra = {
    parse_mode: 'HTML',
    reply_markup: {
        inline_keyboard: [
            [
                { text: "–°–∞–º–æ—É—á–∏—Ç–µ–ª—å", callback_data: "study" },
                { text: "–°–ª–æ–≤–∞—Ä—å", callback_data: "vocabular" }
            ],
            [{ text: '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫', callback_data: 'translater' }],
            [{ text: "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data: "dashboard" }]
        ]
    }
}

let message = `–°–∞–º–æ—É—á–∏—Ç–µ–ª—å –±—É—Ä—è—Ç—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.\n\n –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ üëá`

const handler = new Composer<MyContext>();
const home = new Scenes.WizardScene(
    "home",
    handler,
);

export function greeting(ctx: MyContext) {
    // @ts-ignore
    ctx.update["message"] ? ctx.reply(message, extra) : ctx.editMessageText(message, extra)
}

home.enter((ctx) => greeting(ctx))
home.action(/.*/, async (ctx) => {

    // –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã
    const data = ctx.update["callback_query"].data

    await ctx.scene.enter(data)
    await ctx.answerCbQuery(data)

})

// –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º, –µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞
home.command(scenes.fields, async (ctx) => ctx.scene.enter(ctx.update["message"].text.replace('/', '')))

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö
handler.on("message", async (ctx) => greeting(ctx))

// 
export default home